<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>朝闻道</title>
    <link href="https://fbq.github.io/atom.xml" rel="self" />
    <link href="https://fbq.github.io" />
    <id>https://fbq.github.io/atom.xml</id>
    <author>
        <name>Boqun Feng</name>
        <email>boqun.feng@gmail.com</email>
    </author>
    <updated>2015-01-01T00:00:00Z</updated>
    <entry>
    <title>2015新年计划</title>
    <link href="https://fbq.github.io/posts/new-year-plan.html" />
    <id>https://fbq.github.io/posts/new-year-plan.html</id>
    <published>2015-01-01T00:00:00Z</published>
    <updated>2015-01-01T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on January  1, 2015
    
</div>

<p>2014年基本上在失落和倒霉中度过, 所幸完成了人生两件大事, 一是毕业, 二是工作, 也算是安定下来了吧. 最近总是在想以往的得失, 想自己浪费的光阴和失去的机会, 这感觉并不好受. 总结起来, 自己的懒散和漫无目的大概是影响最大的因素, 比如想写blog, 可很多时候只是写了两笔就停下了, 不知道去干嘛了. 学东西也都是东学一点, 西学一点, 没有什么长处. 所以我想试试看定个新年计划, 来看看自己会不会走出失落的怪圈.</p>
<p>经验告诉我, 我肯定会想到很多计划, 结果最后一个也完成不了, 所以我决定只定<strong>三个</strong>今年能够<strong>完成</strong>的就好. 以免注意力再分散…</p>
<ol style="list-style-type: decimal">
<li>写blog</li>
</ol>
<ul>
<li>每月一篇我应该还是能够做到的吧? 嗯, 那就定今年写12篇blog吧.</li>
</ul>
<ol start="2" style="list-style-type: decimal">
<li>codejam 保2争3</li>
</ol>
<ul>
<li>这么大把年纪了, 还在写codejam也是醉了… 去年运气好进了Round 2, 今年看看会不会进Round 3吧. 其实“保2争3”应该算是目标吧, 说成计划好像不大合适.</li>
</ul>
<ol start="3" style="list-style-type: decimal">
<li>读书</li>
</ol>
<ul>
<li>嗯.. 读书应该不算难的. 计算机和数学相关的大概每季度可以搞定一本吧? 然后闲书什么的分分钟就能看完, 那就4 + 4 + 8 = 16本吧.</li>
</ul>
<p>就这些了.. 再多我估计我又要坑了. 等到来年看看完成度有多少吧.</p>
]]></summary>
</entry>
<entry>
    <title>为什么我又折腾回来了</title>
    <link href="https://fbq.github.io/posts/why-I-come-back.html" />
    <id>https://fbq.github.io/posts/why-I-come-back.html</id>
    <published>2014-08-18T00:00:00Z</published>
    <updated>2014-08-18T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on August 18, 2014
    
</div>

<h2 id="为什么以前不用jekyll">为什么以前不用<a href="http://jekyllrb.com">Jekyll</a></h2>
<p>曾经当我考虑写个人Blog的时候,我用的是<a href="http://www.ruhoh.com">ruhoh</a>,还写了<a href="/2012/11/07/old-ruhoh/">一篇博文</a>来说明为什么用ruhoh. 本来第一考虑使用Jekyll来写,因为概念上比较简单,而且用的人多,开发者的热情和社区的人数都有保证. 但是当时<a href="https://pages.github.com">GitHub Pages</a>还不支持Jekyll,只支持纯html. 这样Blog的源码和输出就得放到两个repo或者branch上保存,感觉好蛋疼.</p>
<p>但是后来,GitHub Pages开始支持Jekyll了,而ruhoh则升级到了2.0,我卡在了ruhoh升级的过程中,之后就不了了之了.</p>
<h2 id="now">Now</h2>
<p>说实话,写下上面的话已经是快一年之前的事情,当时正好搞定小论文,想着写写blog充实下自己,结果没有坚持下来. 一年过去了,也不能说是发生了很多事情吧,但是每每想到自己还有一个单薄的未完工的个人主页,就觉得很懊恼, 懊恼很多之前没有坚持下来的事情,懊恼自己的懒惰.今天重新把这篇补完,其实是因为很有趣的原因: 我最近开始坚持github上每天都有commit,然而今天实在没有什么代码来写了,就想到来更新博客凑数… 不过,刚刚好今天是我的生日,就让这篇文章作为我新的blog的第一篇文章吧,算作是送给自己的生日礼物吧.</p>
<h2 id="题目">题目</h2>
<p>刚刚好最近给自己的主页想到了一个很好的名字,“朝闻道”,这大概就是我的人生追求吧.</p>
]]></summary>
</entry>
<entry>
    <title>ruhoh旧文</title>
    <link href="https://fbq.github.io/posts/old-ruhoh.html" />
    <id>https://fbq.github.io/posts/old-ruhoh.html</id>
    <published>2012-11-07T00:00:00Z</published>
    <updated>2012-11-07T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on November  7, 2012
    
</div>

<p>这是我的第一篇 <a href="http://ruhoh.com">ruhoh</a> 框架下的blog, ruhoh是一个Static Blog Generator, 和<a href="http://docs.getpelican.com">Pelican</a>与<a href="http://octopress.org/">Octopress</a>类似. 静态blog有着诸多好处, 不过我在这里不准备论述这些 :)</p>
<p>我是从刚入大学的时候开始写blog的, 首先用的是一些空间和门户网站一类的东西作为blog, 只是写写心情什么的,很难写出有深度的东西, 后来坚持了不到两年左右的<a href="http://code.google.com/p/vimwiki/">vimwiki</a>, 也是类似于静态blog的方法, 不过当时hosting是个大问题, 虚拟主机和域名都很麻烦, 而且经常容易出问题, 所以就只把wiki的源码保留在和<a href="http://www.github.com">GitHub</a>上, 可能过些日子我就会wiki中的文章迁徙过来, 然后删掉那个repo把.</p>
<p>后来又热心折腾起blog来是因为<a href="http://pages.github.com">GitHub Pages</a>的兴起, 也鼓捣了一阵, GitHub Pages确实很方便, 提供了hosting和域名的服务(虽然是个*.github.com,不过就将就吧), 同时还有版本管理的功能, 依托<a href="http://git-scm.com">Git</a>强大的版本管理功能, 你可以记录你的pages发展的点点滴滴, GitHub也从此时起成为<strong>“程序员的facebook”</strong>.</p>
<p>不过, 就我折腾下来的感觉来看, 我并不是很喜欢GitHub Pages, 主要一点是冗余的问题. 因为如果你想使用GitHub Pages的服务, 你需要在GitHub上建立一个repo, 然后将你的网站内容push到这个repo的master分支, 每次当你更新这个分支的时候, Github Pages就随之更新. 这种hosting方式带来一个问题, 那就是你实际上在<strong>为输出做版本控制</strong>, 而如果你的这些输出的源文件不是html(或者是GitHub Pages支持的模板), 那么你还需要对<strong>源文件进行版本控制</strong>, 这一点让我觉得很麻烦. 当然如果你并不在意GitHub Pages上的那些历史信息, 每次都是<code>git push origin +master</code>, 那么这并不会成为你的困扰, 只是我觉得白白增加了一个repo的维护工作(也有用工具去做这个维护工作的, 比如说Octopresss, 但是解决方案并不完美), 我希望只去跟踪我的源文件. 更重要的是, 我觉得好的blog系统应该能够保留blog中内容的属性和分类, 能够从同一份内容中生成不同的表现(就算目前不能, 也应该为今后留下可能性).</p>
<p>所以我更喜欢只需要管理源文件一个repo的静态blog解决方案, 直到我发现了ruhoh, 在这里就不详细介绍ruhoh的特点了, 留到今后详细说明, 只是简单说一下ruhoh的机制, 你需要在GitHub上建立你自己blog的ruhoh, 然后通过web hook关联到<a href="http://post.ruhoh.com" class="uri">http://post.ruhoh.com</a>, 就能在每次push之后, 自动在<a href="http://ruhoh.com">ruhoh.com</a>生成自己的页面, 当然, 你也可以不依赖于<a href="http://ruhoh.com">ruhoh.com</a>, 自己将compile之后的网站内容host在任意主机上, 包括<a href="http://pages.github.com">Github Pages</a>.</p>
<p>至此, 我的只需要管理一份repo的静态blog方案找到了, 至于它与其他方案的优缺点和是否我这样的选择是正确的, 还要交给时间来考验.</p>
]]></summary>
</entry>

</feed>
